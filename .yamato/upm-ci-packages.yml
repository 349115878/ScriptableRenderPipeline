editors:
  - version: trunk
packages:
  - name: Core
    id: core
    packagename: com.unity.render-pipelines.core
  - name: Lightweight
    id: lwrp
    packagename: com.unity.render-pipelines.lightweight
  - name: ShaderGraph
    id: shadergraph
    packagename: com.unity.shadergraph
  - name: HDRP
    id: hdrp
    packagename: com.unity.render-pipelines.high-definition
  - name: Universal
    id: universal
    packagename: com.unity.render-pipelines.universal
  - name: VFX
    id: vfx
    packagename: com.unity.visualeffectgraph
  - name: Config
    id: config
    packagename: com.unity.render-pipelines.high-definition-config
platforms:
    - name: win
      agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    - name: mac
      agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
---
pack:
  name: z_(do not use) Pack SRP_SmokeTest
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.small
  commands:
    - npm install upm-ci-utils@stable -g --registry https://api.bintray.com/npm/unity/unity-npm
    - upm-ci project pack --project-path ./TestProjects/
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/**/*"

{% for editor in editors -%}
{% for platform in platforms -%}
{% for package in packages -%}
test_{{ package.id }}_{{ platform.name }}_{{ editor.version }}:
  name: z_(do not use) Test {{ package.name }} {{ platform.name }} {{ editor.version }}
  agent:
    type: {{ platform.agent.type }}
    image: {{ platform.agent.image }}
    flavor: {{ platform.agent.flavor }}
  commands:
    - npm install upm-ci-utils@stable -g --registry https://api.bintray.com/npm/unity/unity-npm
    - upm-ci project test -u {{ editor.version }} --project-path TestProjects/SRP_SmokeTest --package-filter {{ package.packagename }} --type package-tests
  artifacts:
    logs:
      paths:
        - "**/upm-ci~/test-results/**/*"
  dependencies:
    - .yamato/upm-ci-packages.yml#pack

validate_{{ package.id }}_{{ platform.name }}_{{ editor.version }}:
  name: z_(do not use) Validate {{ package.name }} {{ platform.name }} {{ editor.version }}
  agent:
    type: {{ platform.agent.type }}
    image: {{ platform.agent.image }}
    flavor: {{ platform.agent.flavor }}
  commands:
    - npm install upm-ci-utils@stable -g --registry https://api.bintray.com/npm/unity/unity-npm
    - upm-ci project test -u {{ editor.version }} --project-path TestProjects/SRP_SmokeTest --package-filter {{ package.packagename }} --type vetting-tests
  artifacts:
    logs:
      paths:
        - "**/upm-ci~/test-results/**/*"
  dependencies:
    - .yamato/upm-ci-packages.yml#pack

test_updated_dependencies_{{ package.id }}_{{ platform.name }}_{{ editor.version }}:
  name: z_(do not use) Test {{ package.name }} with updated dependencies {{ platform.name }} {{ editor.version }}
  agent:
    type: {{ platform.agent.type }}
    image: {{ platform.agent.image }}
    flavor: {{ platform.agent.flavor }}
  commands:
    - npm install upm-ci-utils@stable -g --registry https://api.bintray.com/npm/unity/unity-npm
    - upm-ci project test -u {{ editor.version }} --project-path TestProjects/SRP_SmokeTest --package-filter {{ package.packagename }} --type updated-dependencies-tests
  artifacts:
    logs:
      paths:
        - "**/upm-ci~/test-results/**/*"
  dependencies:
    - path: .yamato/upm-ci-packages.yml#pack
      rerun: always

{% endfor -%}
{% endfor -%}
{% endfor -%}

all_package_tests:
  name: Pack and test all packages
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.small
  commands:
    - npm install upm-ci-utils@stable -g --registry https://api.bintray.com/npm/unity/unity-npm
    - upm-ci package izon -t
  dependencies:
{% for editor in editors -%}
{% for platform in platforms -%}
{% for package in packages -%}
    - .yamato/upm-ci-packages.yml#test_{{ package.id}}_{{ platform.name }}_{{ editor.version }}
    - .yamato/upm-ci-packages.yml#validate_{{ package.id}}_{{ platform.name }}_{{ editor.version }}
{% endfor -%}
{% endfor -%}
{% endfor -%}

dependencies_tests:
  name: Updated Dependencies Test Trigger
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.small
  commands:
    - npm install upm-ci-utils@stable -g --registry https://api.bintray.com/npm/unity/unity-npm
    - upm-ci project izon -d --project-path TestProjects/SRP_SmokeTest
  triggers:
    recurring:
      - branch: master
        frequency: 22 * * ?
  dependencies:
{% for editor in editors -%}
{% for platform in platforms -%}
{% for package in packages -%}
    - path: .yamato/upm-ci-packages.yml#test_updated_dependencies_{{ package.id}}_{{ platform.name }}_{{ editor.version }}
      rerun: always
{% endfor -%}
{% endfor -%}
{% endfor -%}

{% for package in packages -%}

publish_{{ package.id }}:
  name: z_(do not use) Publish {{ package.name }}
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.small
  commands:
    - npm install upm-ci-utils@stable -g --registry https://api.bintray.com/npm/unity/unity-npm
    - upm-ci package publish --package-path {{ package.packagename }}
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/*.tgz"
  dependencies:
    - .yamato/upm-ci-packages.yml#pack
{% for editor in editors -%}
{% for platform in platforms -%}
    - .yamato/upm-ci-packages.yml#test_{{ package.id}}_{{ platform.name }}_{{ editor.version }}
    - .yamato/upm-ci-packages.yml#validate_{{ package.id}}_{{ platform.name }}_{{ editor.version }}
{% endfor -%}
{% endfor -%}
{% endfor -%}

publish_all:
  name: Publish all packages
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.large
  commands:
    - git tag v$(cd com.unity.render-pipelines.core && node -e "console.log(require('./package.json').version)")
    - git push origin --tags
  dependencies:
{% for package in packages -%}
    - .yamato/upm-ci-packages.yml#publish_{{ package.id }}
{% endfor %}