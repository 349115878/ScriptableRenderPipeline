editors:
  - version: trunk
platforms:
  - name: Windows64
    type: Unity::VM::GPU
    image: sdet/gamecode_win10:stable
    flavor: b1.large
  - name: OSX
    type: Unity::metal::macmini
    image: slough-ops/macos-10.14-xcode
    flavor: m1.mac
  - name: OSX_OpenGLCore
    type: Unity::VM::osx
    image: buildfarm/mac:stable
    flavor: m1.mac
testplatforms:
  - name: Standalone
    args: --suite=playmode --platform=Standalone
  - name: playmode
    args: --suite=playmode
  - name: editmode
    args: --suite=editor --platform=editmode
mobiles:
  - name: Android
    type: Unity::mobile::android
    image: mobile/android-execution:r19-390185
    flavor: b1.large
projects:
  - name: Universal
    folder: UniversalGraphicsTest
    packagename: com.unity.render-pipelines.universal
---
{% for project in projects %}
{% for editor in editors %}
{% for platform in platforms %}
{% for testplatform in testplatforms %}

{% if platform.name == "OSX" and testplatform.name == "editmode" %}
#skip
{% else %}
{{ project.name }}_{{ platform.name }}_{{ testplatform.name }}_{{ editor.version }}:
  name : Build and Test {{ project.name }} on {{ platform.name }}_{{ testplatform.name }} on version {{ editor.version }}
  agent:
    {% if testplatform.name == "editmode" and platform.name == "Windows64" %}
    type: Unity::VM
    image: {{ platform.image }}
    {% elsif testplatform.name == "editmode" and platform.name == "OSX_OpenGLCore" or platform.name == "OSX" %}
    type: Unity::VM::osx
    image: buildfarm/mac:stable
    {% else %}
    type: {{ platform.type }}
    image: {{ platform.image }}
    {% endif %}    
    flavor: {{ platform.flavor}}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git TestProjects/{{ project.folder }}/utr
    {% if platform.name == "OSX_OpenGLCore" %}
    - npm install upm-ci-utils -g --registry https://api.bintray.com/npm/unity/unity-npm
    - pip install unity-downloader-cli --extra-index-url https://artifactory.eu-cph-1.unityops.net/api/pypi/common-python/simple
    - cd TestProjects/{{ project.folder }} && unity-downloader-cli -b {{ editor.version }} -c editor --wait --published
    
    {% if testplatform.name == "Standalone" %}
    - cd TestProjects/{{ project.folder }} && utr/utr {{ testplatform.args }}{{ platform.name }} --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results
    {% else %}
    - cd TestProjects/{{ project.folder }} && utr/utr {{ testplatform.args }} --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results
    {% endif %}
    
    
    {% else %}   
    
    {% if platform.name == "Windows64" %}
    - npm install upm-ci-utils -g --registry https://api.bintray.com/npm/unity/unity-npm
    - pip install unity-downloader-cli --extra-index-url https://artifactory.eu-cph-1.unityops.net/api/pypi/common-python/simple
    - cd TestProjects/{{ project.folder }} && unity-downloader-cli -b {{ editor.version }} -c editor --wait --published
     
    {% if testplatform.name == "Standalone" %}
    - cd TestProjects/{{ project.folder }} && powershell -command "utr/utr {{ testplatform.args }}{{ platform.name }} --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results --timeout=1200"
    {% else %}
    - cd TestProjects/{{ project.folder }} && powershell -command "utr/utr {{ testplatform.args }} --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results"
    {% endif %}
      
    {% else %}
    
    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install --user unity-downloader-cli --extra-index-url https://artifactory.eu-cph-1.unityops.net/api/pypi/common-python/simple'"
    - scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r ../ScriptableRenderPipeline/ bokken@$BOKKEN_DEVICE_IP:~/ScriptableRenderPipeline
    - scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP '/Users/bokken/Library/Python/3.7/bin/unity-downloader-cli -u {{ editor.version }} -c editor --wait --published'
    {% if testplatform.name == "Standalone" %}
    - |
      ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP 'cd ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }} && ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/utr/utr {{ testplatform.args }}{{ platform.name }}  --testproject=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }} --editor-location=/Users/bokken/.Editor --artifacts_path=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results'
    {% else %}
    - |
      ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP 'cd ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }} && ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/utr/utr {{ testplatform.args }} --testproject=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }} --editor-location=/Users/bokken/.Editor --artifacts_path=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results'
    {% endif %}
      UTR_RESULT=$?
      mkdir -p TestProjects/{{ project.folder }}/test-results/
      scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results/ TestProjects/{{ project.folder }}/test-results/
      exit $UTR_RESULT
      
    {% endif %}
    {% endif %}
  artifacts:
    logs:
      paths:
        - "**/test-results/**"
{% endif %}
{% endfor %}
{% endfor %}
{% endfor %}

{% for mobile in mobiles %}
{% for project in projects %}
{% for editor in editors %}
{{ project.name }}_{{ mobile.name }}_{{ editor.version }}:
  name: Build and Test {{ project.name }} on {{ mobile.name }} on version {{ editor.version }}
  agent:
    type: {{ mobile.type }}
    image: {{ mobile.image }}
    flavor: {{ mobile.flavor }}
  commands:
   - wget http://artifactory-slo.bf.unity3d.com/artifactory/ie-generic-core-automation/tools/android/shield/adbkey.pub -O %USERPROFILE%/.android/adbkey.pub
   - wget http://artifactory-slo.bf.unity3d.com/artifactory/ie-generic-core-automation/tools/android/shield/adbkey -O %USERPROFILE%/.android/adbkey
   - pip install unity-downloader-cli --extra-index-url https://artifactory.eu-cph-1.unityops.net/api/pypi/common-python/simple
   - git clone git@github.cds.internal.unity3d.com:unity/utr.git utr
   - unity-downloader-cli -b {{ editor.version }} -p WindowsEditor -c editor -c {{ mobile.name }} --wait
   - >
      %ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%
   - powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
   - NetSh Advfirewall set allprofiles state off
   - utr\utr --suite=playmode --testfilter=085 --platform={{ mobile.name }} --testproject=TestProjects\{{ project.folder }} --editor-location=WindowsEditor --artifacts_path=upm-ci~\test-results --scripting-backend=il2cpp --timeout=1200
   - start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
  artifacts:
    logs:
      paths:
        - "**/upm-ci~/test-results/**/*"
{% endfor %}
{% endfor %}
{% endfor %}

All_{{ project.name }}:
  name: All {{ project.name }} CI
  agent:
    name: whatever
    type: Unity::VM
    image: cds-ops/ubuntu-18.04-agent:latest
    flavor: b1.small
  commands:
    - dir
  dependencies:
  {% for editor in editors %}
  {% for platform in platforms %}
  {% for testplatform in testplatforms %}
  {% if platform.name == "OSX_OpenGLCore" %}
  
  {% if testplatform.name == "editmode" %}
    - .yamato/upm-ci-{{ project.name | downcase }}.yml#{{ project.name }}_{{ platform.name }}_{{ testplatform.name }}_{{ editor.version }}
  {% endif %}
  
  {% elsif platform.name == "OSX"  and testplatform.name == "editmode" %}
  
  {% else %}
    - .yamato/upm-ci-{{ project.name | downcase }}.yml#{{ project.name }}_{{ platform.name }}_{{ testplatform.name }}_{{ editor.version }}
  {% endif %}
    
  {% endfor %}
  {% endfor %}
  {% endfor %}
  
{% endfor %}
